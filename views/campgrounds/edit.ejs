<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="/css/style.css" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,100..700;1,100..700&family=Kodchasan:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;1,200;1,300;1,400;1,500;1,600;1,700&family=Nunito+Sans:ital,opsz,wght@0,6..12,200..1000;1,6..12,200..1000&family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap"
        rel="stylesheet">
</head>

<body data-logged-in="<%= !!currentUser %>">

    <%- include('../layouts/navbar') %>
        <%- include('../flash/flash') %>

            <form action="/campgrounds/<%= campground._id %>?_method=PUT" method="POST" class="new" novalidate
                enctype="multipart/form-data">
                <a href="/campgrounds/<%= campground._id %>" class="new__back">
                    <svg class="">
                        <use xlink:href="/img/sprite.svg#icon-forward"></use>
                    </svg></a>


                <!-- title field -->
                <label for="title" class="new__label new__label-title">Tên trại</label>

                <input class="new__input new__input-title" name="campground[title]" spellcheck="false"
                    autocomplete="false" required="title" type="text" maxlength="50" value="<%= campground.title %>">

                <div class="input__error"></div>
                <!-- title field -->


                <!-- image field -->
                <label class='new__label' for="">Hình ảnh</label>
                <label for="new__image" class="new__label-image">
                    <svg class="">
                        <use xlink:href="/img/sprite.svg#icon-upload"></use>
                    </svg>
                </label>
                <input type="file" name="campground[image]" id="new__image" multiple class="new__input-image ">
                <div class="input__error"></div>
                <span class="new__input-image-current ">Không có ảnh nào</span>
                <div class="edit__image-list">
                    <% campground.image.forEach(function(img, i ){ %>
                        <div class="edit__image">
                            <img src="<%= img.thumbnail %>" alt="">
                            <label for="image-<%=i  %>">Xóa</label>
                            <input type="checkbox" id="image-<%=i  %>" name='deleteImages[]'
                                value="<%= img.filename %>">

                        </div>

                        <% }) %>
                </div>



                <!-- image field -->

                <!-- price field -->
                <label for="price" class="new__label new__label-price">Giá</label>

                <input class="new__input new__input-price" max="1000000000000" spellcheck="false" autocomplete="off"
                    required id='price' type="number" name="campground[price]" value="<%= campground.price %>">

                <div class="input__error"></div>
                <!-- price field -->

                <!-- location field -->
                <label for="location" class="new__label new__label-location">Địa điểm</label>

                <input class="new__input new__input-location" spellcheck="false" autocomplete="off" required
                    id='location' type="text" name="campground[location]" maxlength="50"
                    value="<%= campground.location %>">

                <div class="input__error"></div>

                <label for="location" class="new__label new__label-location">Sức chứa</label>

                <input class="new__input new__input-location" spellcheck="false" autocomplete="off" required
                    id='location' type="number" name="campground[capacity]" maxlength="50"
                    value="<%= campground.capacity %>">

                <div class="input__error"></div>
                <!-- location field -->

                <!-- description field -->
                <label for="description" class="new__label new__label-description">Mô tả</label>

                <textarea class='new__input new__input-description' spellcheck="false" style="overflow:hidden"
                    name="campground[description]" id="description" cols="30" rows="10"
                    maxlength="20000"><%= campground.description %></textarea>

                <div class="input__error"></div>
                <!-- description field -->

                <button class="new__button">hoàn tất</button>
            </form>


            <%- include('../layouts/footer') %>
                <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js"></script>
                <script src="https://cdnjs.cloudflare.com/ajax/libs/ScrollTrigger/1.0.6/ScrollTrigger.min.js"
                    integrity="sha512-+LXqbM6YLduaaxq6kNcjMsQgZQUTdZp7FTaArWYFt1nxyFKlQSMdIF/WQ/VgsReERwRD8w/9H9cahFx25UDd+g=="
                    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
                <script src="
    https://cdn.jsdelivr.net/npm/@studio-freight/lenis@1.0.39/dist/lenis.min.js
    "></script>
                <script src="/js/base/smoothScroll.js"></script>
                <script src="/js/base/navigationAvatarAnimation.js"></script>
                <script src="/js/base/footerAnimation.js"></script>
                <script
                    src="https://cdn.jsdelivr.net/npm/bs-custom-file-input/dist/bs-custom-file-input.min.js"></script>
                <script src="/js/edit/campgroundValidation.js"></script>
                <script>
                    const newInputImage = document.querySelector('.new__input-image')
                    const newInputImageCurrent = document.querySelector('.new__input-image-current')
                    newInputImage.addEventListener('change', (e) => {
                        const files = newInputImage.files;
                        if (files.length > 0) {  // Ensure that files are defined and not empty
                            let fileNames = [];
                            for (var i = 0; i < files.length; i++) {
                                fileNames.push(files[i].name);
                            }
                            newInputImageCurrent.textContent = fileNames.join(', ');
                        } else {
                            newInputImageCurrent.textContent = 'No file chosen';
                        }
                    })
                </script>
                <!-- Include Socket.IO client script -->
                <script src="/socket.io/socket.io.js"></script>
                <script>
                    const socket = io();

                    socket.on('connect', () => {
                        console.log('Connected to server via Socket.IO');
                    });

                    // Listen for new notifications
                    socket.on('newNotification', (notification) => {
                        displayNotification(notification);
                    });

                    function displayNotification(notification) {
                        // Update the notification dropdown or list
                        const notificationList = document.getElementById('notificationList');
                        const notificationBadge = document.getElementById('notificationBadge');

                        if (notificationList && notificationBadge) {
                            const listItem = document.createElement('li');
                            listItem.innerHTML = `
                <a href="/notifications/${notification._id}">
                    ${notification.content}
                </a>
            `;
                            notificationList.prepend(listItem);

                            // Update notification count badge
                            let count = parseInt(notificationBadge.textContent) || 0;
                            notificationBadge.textContent = count + 1;
                        }
                    }
                </script>
                <script>
                    function toggleDropdown(event) {
                        event.preventDefault();
                        const dropdownMenu = document.querySelector('.dropdown-menu');
                        dropdownMenu.classList.toggle('show');
                    }

                    // Close dropdown when clicking outside
                    document.addEventListener('click', function (e) {
                        const dropdownMenu = document.querySelector('.dropdown-menu');
                        const notificationsDropdown = document.getElementById('notificationsDropdown');
                        if (!notificationsDropdown.contains(e.target) && !dropdownMenu.contains(e.target)) {
                            dropdownMenu.classList.remove('show');
                        }
                    });

                </script>

</body>

</html>